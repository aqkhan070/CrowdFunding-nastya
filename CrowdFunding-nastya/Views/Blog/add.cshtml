@model CrowdFunding_nastya.Models.tblBlog

@{
    ViewBag.Title = "add";
    Layout = "~/Views/Shared/_Admin.cshtml";
}


@{
    ViewBag.Title = "add";
    Layout = "~/Views/Shared/_Admin.cshtml";
}

<!-- start page title -->
@{
    if (Model.BlogId == 0)
    {
        <div class="row">
            <div class="col-12">
                <div class="page-title-box d-sm-flex align-items-center justify-content-between">
                    <h4 class="mb-sm-0">Create Blog</h4>

                    <div class="page-title-right">
                        <ol class="breadcrumb m-0">
                            <li class="breadcrumb-item"><a href="javascript: void(0);">Blogs</a></li>
                            <li class="breadcrumb-item active">Create Blog</li>
                        </ol>
                    </div>

                </div>
            </div>
        </div>
    }
    else
    {
    <div class="row">
        <div class="col-12">
            <div class="page-title-box d-sm-flex align-items-center justify-content-between">
                <h4 class="mb-sm-0">Update Blog</h4>

                <div class="page-title-right">
                    <ol class="breadcrumb m-0">
                        <li class="breadcrumb-item"><a href="javascript: void(0);">Blogs</a></li>
                        <li class="breadcrumb-item active">Update Blog</li>
                    </ol>
                </div>

            </div>
        </div>
    </div>
    }
}

<!-- end page title -->

@using (Html.BeginForm("add", "Blog", FormMethod.Post, new { enctype = "multipart/form-data", id = "blogForm" }))
{
    @Html.ValidationSummary(true)

    <div class="row">
        <div class="col-lg-8">
            <div class="card">
                <div class="card-body">
                    @Html.HiddenFor(model => model.BlogId)
                    <div class="mb-3">
                        <label class="form-label" for="project-title-input">Blog Title</label>
                        @Html.EditorFor(model => model.BlogTitle, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter project title" } })
                    </div>

                    <div class="mb-3">
                        <label class="form-label" for="project-thumbnail-img">Thumbnail Image</label>
                        <input class="form-control" name="BlogThumbnailImage" id="project-thumbnail-img" type="file" accept="image/png, image/gif, image/jpeg">
                        <img src="@Model.ThumbnailImage" width="50" height="50" class="mt-1" style="border-radius: 50%;" />
                    </div>

                    <div class="mb-3">
                        <label class="form-label">Blog Description</label>
                        <div id="ckeditor-classic">
                            @Html.TextAreaFor(model => model.BlogDescription, new { htmlAttributes = new { @id = "BlogDescription" } })
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-lg-4">
                            <div class="mb-3 mb-lg-0">
                                <label for="PriorityId" class="form-label">Priority</label>
                                @*@Html.EditorFor(model => model.PriorityId, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter project title" } })*@
                                <select id="PriorityId" class="form-control" name="PriorityId" required>
                                    <option value="" @(Model == null || Model.PriorityId == null ? "selected" : "")>---Select Priority---</option>
                                    @foreach (var list in ViewBag.PriorityList as SelectList)
                                    {
                                        <option value="@list.Value" @(Model != null && list.Value == Model.PriorityId.ToString() ? "selected" : "")>@list.Text</option>
                                    }
                                </select>
                            </div>
                        </div>
                        <div class="col-lg-4">
                            <div class="mb-3 mb-lg-0">
                                <label for="choices-status-input" class="form-label">Status</label>
                                @Html.DropDownListFor(model => model.IsActive, new List<SelectListItem>
                                {
                                    new SelectListItem { Text = "---Select Status---", Value = "", Selected = true },
                                    new SelectListItem { Text = "Active", Value = "true"},
                                    new SelectListItem { Text = "In-Active", Value = "false"}
                                }, new { @class = "form-select", id = "choices-status-input", required = "required" })
                            </div>
                        </div>
                        <div class="col-lg-4">
                            <div>
                                @{
                                    if (Model.BlogId == 0)
                                    {
                                        <label for="datepicker-deadline-input" class="form-label">Publish Date</label>
                                        @Html.EditorFor(model => model.PublishDate, new { htmlAttributes = new { @class = "form-control", @type = "date", @id = "datepicker-deadline-input", @data_provider = "flatpickr" } })
                                    }
                                    else
                                    {
                                        <label for="datepicker-deadline-input" class="form-label">Publish Date</label>
                                        @Html.EditorFor(model => model.PublishDate, new { htmlAttributes = new { @class = "form-control", @type = "datetime", @id = "datepicker-deadline-input", @data_provider = "flatpickr" , @readonly = "readonly" } })
                                    }
                                }

                            </div>
                        </div>
                    </div>
                </div>
                <!-- end card body -->
            </div>
            <!-- end card -->

            <div class="card">
                <div class="card-header">
                    <h5 class="card-title mb-0">Attached files</h5>
                </div>
                <div class="card-body">
                    <div>
                        <p class="text-muted">Add Attached files here.</p>
                        <div class="file-container">
                            <label for="file-input" class="file-label">Choose Files</label>
                            <input id="file-input" name="BlogAttachedFiles" type="file" multiple="multiple" class="file-input" onchange="displaySelectedImages(this)">
                        </div>

                        <div class="selected-images" id="selected-images"></div>
                        <style>
                            .file-container {
                                position: relative;
                                margin-bottom: 20px;
                            }

                            .file-input {
                                opacity: 0;
                                position: absolute;
                                top: 0;
                                left: 0;
                                width: 100%;
                                height: 100%;
                                cursor: pointer;
                            }

                            .file-label {
                                display: block;
                                background-color: #3498db;
                                color: #fff;
                                padding: 10px;
                                border-radius: 5px;
                                cursor: pointer;
                            }

                            .selected-images {
                                margin-top: 10px;
                            }

                            .preview-image {
                                display: inline-block;
                                margin-right: 10px;
                                width: 70px;
                                height: 50px;
                                position: relative;
                            }

                            .remove-button {
                                position: absolute;
                                top: 0px;
                                right: 0px;
                                background-color: #e74c3c;
                                color: #fff;
                                padding: 1px;
                                border: none;
                                cursor: pointer;
                                display: none; /* Hidden by default */
                            }

                            .preview-image:hover .remove-button {
                                display: block; /* Show on hover */
                            }
                        </style>

                        @foreach (var attachment in Model.tblBlogAttachedFiles)
                        {
                            <div class="image-container" data-image-id="@attachment.AttachedFileId">
                                <img src="@attachment.AttachedFiles" height="50" width="50" class="my-2 image" loading="lazy" style="border-radius: 50%;" />
                                <div class="cross-button">✖</div>
                            </div>
                            <div id="imageDeleted" class="alert alert-success" role="alert" style="display:none;">
                                Image Successfully Deleted..!
                            </div>
                            <div id="imageNotDeleted" class="alert alert-danger" role="alert" style="display:none;">
                                Image Not Successfully Deleted..!
                            </div>
                        }
                        <style>
                            .image-container {
                                position: relative;
                                display: inline-block;
                            }

                            .cross-button {
                                position: absolute;
                                top: 2px;
                                right: 2px;
                                font-size: 10px;
                                color: white;
                                background-color: black;
                                border: none;
                                border-radius: 50%;
                                padding: 2px;
                                cursor: pointer;
                                display: none;
                            }

                            .image-container:hover .cross-button {
                                display: block;
                            }
                        </style>

                        <!-- end dropzon-preview -->
                    </div>
                </div>
            </div>
            <!-- end card -->
            <div class="text-end mb-4">
                @{
                    if (Model.BlogId == 0)
                    {
                        <button type="button" class="btn btn-danger w-sm">Delete</button>
                        <button type="button" class="btn btn-secondary w-sm" onclick="goBack()">Cancel</button>
                        <button type="submit" class="btn btn-success w-sm" onclick="GetData()">Create</button>
                    }
                    else
                    {
                        <button type="button" class="btn btn-danger w-sm">Delete</button>
                        <button type="button" class="btn btn-secondary w-sm" onclick="goBack()">Cancel</button>
                        <button type="submit" class="btn btn-success w-sm" onclick="GetData()">Update</button>
                    }
                }

            </div>
        </div>
        <!-- end col -->
        <div class="col-lg-4">
            <div class="card">
                <div class="card-header">
                    <h5 class="card-title mb-0">Category</h5>
                </div>
                <div class="card-body">
                    <div class="mb-3">
                        <label for="CategoryId" class="form-label">Categories</label>
                        @*@Html.EditorFor(model => model.CategoryId)*@
                        <select id="CategoryId" class="form-control" name="CategoryId" required>
                            <option value="" @(Model == null || Model.CategoryId == null ? "selected" : "")>---Select Category---</option>
                            @foreach (var list in ViewBag.CategoryList as SelectList)
                            {
                                <option value="@list.Value" @(Model != null && list.Value == Model.CategoryId.ToString() ? "selected" : "")>@list.Text</option>
                            }
                        </select>
                    </div>


                </div>
                <!-- end card body -->
            </div>
            <div class="card">
                <div class="card-header">
                    <h5 class="card-title mb-0">Type</h5>
                </div>
                <div class="card-body">
                    <div>
                        <label for="BlogTypeId" class="form-label">Blog Type</label>
                        @*@Html.EditorFor(model => model.BlogTypeId)*@
                        <select id="BlogTypeId" class="form-control" name="BlogTypeId" required>
                            <option value="" @(Model == null || Model.BlogTypeId == null ? "selected" : "")>---Select Category---</option>
                            @foreach (var list in ViewBag.BlogTypeList as SelectList)
                            {
                                <option value="@list.Value" @(Model != null && list.Value == Model.BlogTypeId.ToString() ? "selected" : "")>@list.Text</option>
                            }
                        </select>
                    </div>
                </div>
                <!-- end card body -->
            </div>
            <!-- end card -->
            <!-- end card -->
            <!-- end card -->
        </div>
        <!-- end col -->
    </div>
}
<!-- end row -->
<script src="~/assets/admin/js/jquery-3.2.1.min.js"></script>
<script>
    function displaySelectedImages(input) {
        var selectedImagesContainer = document.getElementById('selected-images');
        selectedImagesContainer.innerHTML = '';

        for (var i = 0; i < input.files.length; i++) {
            var reader = new FileReader();

            reader.onload = function (e) {
                var previewImage = document.createElement('div');
                previewImage.classList.add('preview-image');

                var image = document.createElement('img');
                image.src = e.target.result;
                image.classList.add('preview-image');
                previewImage.appendChild(image);

                var removeButton = document.createElement('button');
                removeButton.innerText = '⨯';
                removeButton.classList.add('remove-button');
                removeButton.onclick = function () {
                    previewImage.remove();
                };
                previewImage.appendChild(removeButton);

                selectedImagesContainer.appendChild(previewImage);
            }

            reader.readAsDataURL(input.files[i]);
        }
    }

    $(document).ready(function () {
        $('.image-container').on('click', '.cross-button', function () {
            var imageId = $(this).closest('.image-container').data('image-id');

            // Handle the cross button click event for the specific image with imageId
            // You can remove the image or perform any other desired action
            console.log('Removing image with ID:', imageId);

             $.ajax({
                 url: '@Url.Action("DeleteAttachImage" , "Blog")',
                 method: 'POST',
                 data:
                 {
                     AttachedFileId: imageId
                 },
                 success: function (response) {
                     if (response.success) {
                         // Handle success
                         //alert('Image deleted successfully');
                         $('#imageDeleted').show();
                         $('#imageDeleted').fadeOut(3000);
                     }
                     else {
                         $('#imageNotDeleted').show();
                         $('#imageNotDeleted').fadeOut(3000);
                     }
                 },
                 error: function(error) {
                     // Handle error
                     console.error('Error deleting attached image:', error);
                     $('#imageNotDeleted').show();
                     $('#imageNotDeleted').fadeOut(3000);
                 }
             });

            // Remove the image container from the DOM
            $(this).closest('.image-container').remove();
        });
    });

    function goBack() {
        window.history.back();
    }

    function GetData() {
        let html = $(".ck-editor__editable").html();

        $("#BlogDescription").text(html);
    }

    $(document).ready(function () {

        $(".ul li a").removeClass("active");
        $('#blogs').addClass('active');
        $('#sidebarblog').addClass('show');
        $('#addblog').addClass('active');
    });

</script>